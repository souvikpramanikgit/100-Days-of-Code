// Link => https://leetcode.com/problems/find-k-th-smallest-pair-distance/?envType=daily-question&envId=2024-08-14

class Solution {
public:
    int smallestDistancePair(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        int n=nums.size();
        int l=0,h=nums[n-1]-nums[0];

        while(l<h){
            int mid=(l+h)/2;
            if(countPairs(mid,nums)<k){
                l=mid+1;
            } else h=mid;
        }
        return l;
    }
    private:
    int countPairs(int mid,const vector<int>& nums){
        int count=0;
        int j=0;
        for(int i=0;i<nums.size();i++){
            while(j<nums.size() && nums[j]-nums[i]<=mid){
                ++j;
            }
            count+=j-i-1;
        }
        return count;
    }
};
