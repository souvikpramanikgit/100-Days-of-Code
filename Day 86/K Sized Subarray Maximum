// Link => https://www.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1

class Solution {
  public:
    // Function to find maximum of each subarray of size k.
    vector<int> max_of_subarrays(int k, vector<int> &arr) {
        // your code here
        // vector<int> ans;
        // for(int i=0;i<arr.size()-k+1;i++){
        //     int a=arr[i];
        //     int b=arr[i+1];
        //     int c=arr[i+2];
        //     if(a>b && a>c){
        //         ans.push_back(a);
        //     }
        //     else if(b>c){
        //         ans.push_back(b);
        //     }
        //     else{
        //         ans.push_back(c);
        //     }
        // }
        // return ans;
        deque<int> dq;
        vector<int> result;

        for (int i = 0; i < k; i++) {
            
            if (!dq.empty() && dq.front() == i - k) {
                dq.pop_front();
            }
            
            
            while (!dq.empty() && arr[dq.back()] <= arr[i]) {
                dq.pop_back();
            }

            
            dq.push_back(i);
            
            
            if (i >= k - 1) {
                result.push_back(arr[dq.front()]);
            }
        }
        return result;
    }
};
