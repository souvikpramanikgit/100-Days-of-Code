// Link-> https://www.geeksforgeeks.org/problems/array-of-alternate-ve-and-ve-nos1401/1

//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
// User function template for C++
class Solution {
  public:

    void rearrange(vector<int> &arr) {
        // code here
        vector<int> pos,neg;
        // vector<int> ans;
        for(int i=0;i<arr.size();i++){
            if(arr[i]>=0){
                pos.push_back(arr[i]);
            }
            else{
                neg.push_back(arr[i]);
            }
        }
        int p=0,n=0;
        int i=0;
        while (p < pos.size() && n < neg.size()) {
            if (i % 2 == 0)
                arr[i++] = pos[p++]; // Add positive element
            else
                arr[i++] = neg[n++]; // Add negative element
        }

        // If there are remaining positive elements
        while (p < pos.size()) {
            arr[i++] = pos[p++];
        }

        // If there are remaining negative elements
        while (n < neg.size()) {
            arr[i++] = neg[n++];
        }
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        int num;

        getline(cin, input);
        stringstream s2(input);
        while (s2 >> num) {
            arr.push_back(num);
        }
        Solution ob;
        ob.rearrange(arr);
        for (int i = 0; i < arr.size(); i++) {
            cout << arr[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
